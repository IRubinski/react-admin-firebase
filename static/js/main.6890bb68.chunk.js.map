{"version":3,"sources":["posts.js","users.js","CustomForgotPassword.js","CustomLoginPage.js","App.js","registerServiceWorker.js","index.js"],"names":["PostList","props","react","List","Datagrid","TextField","source","RichTextField","ReferenceField","label","reference","ShowButton","EditButton","DeleteButton","redirect","PostShow","Show","SimpleShowLayout","FileField","title","multiple","PostCreate","Create","SimpleForm","TextInput","esm","ReferenceInput","SelectInput","optionText","FileInput","ArrayInput","SimpleFormIterator","ImageInput","accept","ImageField","PostEdit","Edit","disabled","DateField","UserFilter","Filter","alwaysOn","UserList","Object","assign","filters","users_UserFilter","UserShow","UserCreate","UserEdit","AlertDialog","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","_React$useState3","_React$useState4","email","setEmail","_React$useState5","_React$useState6","toastOpen","setToastOpen","_React$useState7","_React$useState8","toastMessage","setToastMessage","handleClose","handleSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","console","log","firebase","auth","sendPasswordResetEmail","t0","message","stop","apply","this","arguments","react_default","createElement","Button","variant","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","TextField_TextField","type","style","width","onChange","event","target","value","DialogActions","color","autoFocus","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","SignInScreen","StyledFirebaseAuth_default","firebaseAuth","CustomLoginForm","fontFamily","marginLeft","LoginForm","CustomLoginPage_SignInScreen","CustomLoginPage","Login","CustomLoginPage_CustomLoginForm","firebaseConfig","JSON","parse","process","REACT_APP_FIREBASE_CONFIG","firebaseApp","initializeApp","authProvider","FirebaseAuthProvider","dataProvider","FirebaseDataProvider","logging","app","persistence","dontAddIdFieldToDoc","lazyLoading","enabled","firestoreCostsLogger","App","Admin","loginPage","Resource","name","list","show","create","edit","icon","UserIcon","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6890bb68.chunk.js","sourcesContent":["// in src/posts.js\nimport * as React from \"react\";\n// tslint:disable-next-line:no-var-requires\nimport {\n  Datagrid,\n  List,\n  Show,\n  Create,\n  Edit,\n  Filter,\n  DateField,\n  ImageField,\n  ImageInput,\n  SimpleShowLayout,\n  SimpleForm,\n  TextField,\n  TextInput,\n  ShowButton,\n  EditButton,\n  DeleteButton,\n  RichTextField,\n  ReferenceField,\n  SelectInput,\n  ReferenceInput,\n  FileInput,\n  FileField,\n  ArrayInput,\n  SimpleFormIterator,\n} from \"react-admin\";\nimport RichTextInput from \"ra-input-rich-text\";\n\n// const PostFilter = (props) => (\n//   <Filter {...props}>\n//     <TextInput label=\"Search\" source=\"title\" alwaysOn />\n//   </Filter>\n// );\n\n// const ReferenceFilter = (props) => (\n//   <Filter {...props}>\n//     <ReferenceInput\n//       label=\"Organization\"\n//       source=\"user.id\"\n//       reference=\"users\"\n//       allowEmpty\n//     >\n//       <SelectInput optionText=\"name\" />\n//     </ReferenceInput>\n//   </Filter>\n// );\n\nexport const PostList = (props) => (\n  <List\n    {...props}\n    // filters={<ReferenceFilter />}\n    // filter={{ updatedby: \"test@example.com\" }}\n  >\n    <Datagrid>\n      <TextField source=\"id\" />\n      <TextField source=\"title\" />\n      <TextField source=\"publishing_state\" />\n      <TextField source=\"updatedby\" />\n      <TextField source=\"createdby\" />\n      <RichTextField source=\"body\" />\n      <ReferenceField label=\"User\" source=\"user_id\" reference=\"users\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n      <ShowButton label=\"\" />\n      <EditButton label=\"\" />\n      <DeleteButton label=\"\" redirect={false} />\n    </Datagrid>\n  </List>\n);\n\nexport const PostShow = (props) => (\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"id\" />\n      <TextField source=\"createdate\" />\n      <TextField source=\"lastupdate\" />\n      <TextField source=\"title\" />\n      <RichTextField source=\"body\" />\n      <ReferenceField label=\"User\" source=\"user_id\" reference=\"users\">\n        <TextField source=\"name\" />\n      </ReferenceField>\n      <FileField\n        source=\"files_multiple.src\"\n        title=\"files_multiple.title\"\n        multiple\n      />\n    </SimpleShowLayout>\n  </Show>\n);\n\nexport const PostCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"id\" />\n      <TextInput source=\"title\" />\n      <RichTextInput source=\"body\" />\n      <ReferenceInput\n        label=\"User\"\n        source=\"user_id\"\n        reference=\"users\"\n        // filter={{ isAdmin: true }}\n      >\n        <SelectInput label=\"User\" optionText=\"name\" />\n      </ReferenceInput>\n      <FileInput source=\"files_multiple\" multiple label=\"Files with (multiple)\">\n        <FileField source=\"src\" title=\"title\" />\n      </FileInput>\n      <ArrayInput source=\"files\">\n        <SimpleFormIterator>\n          <FileInput source=\"file\" label=\"Array Form Files\">\n            <FileField source=\"src\" title=\"title\" />\n          </FileInput>\n        </SimpleFormIterator>\n      </ArrayInput>\n      <ArrayInput source=\"sections.mySection.items\" label=\"Section items\">\n        <SimpleFormIterator>\n          <TextInput source=\"name\" label=\"Name\" />\n          <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\">\n            <ImageField source=\"src\" title=\"title\" />\n          </ImageInput>\n        </SimpleFormIterator>\n      </ArrayInput>\n    </SimpleForm>\n  </Create>\n);\n\nexport const PostEdit = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <DateField source=\"createdate\" />\n      <DateField source=\"lastupdate\" />\n      <TextInput source=\"title\" />\n      <RichTextInput source=\"body\" />\n      <ReferenceInput\n        label=\"User\"\n        source=\"user_id\"\n        reference=\"users\"\n        // filter={{ isAdmin: true }}\n      >\n        <SelectInput label=\"User\" optionText=\"name\" />\n      </ReferenceInput>\n      <FileInput source=\"files_multiple\" multiple label=\"Files with (multiple)\">\n        <FileField source=\"src\" title=\"title\" />\n      </FileInput>\n      <ArrayInput source=\"files\">\n        <SimpleFormIterator>\n          <FileInput source=\"file\" label=\"Array Form Files\">\n            <FileField source=\"src\" title=\"title\" />\n          </FileInput>\n        </SimpleFormIterator>\n      </ArrayInput>\n      <ArrayInput source=\"sections.mySection.items\" label=\"Section items\">\n        <SimpleFormIterator>\n          <TextInput source=\"name\" label=\"Name\" />\n          <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\">\n            <ImageField source=\"src\" title=\"title\" />\n          </ImageInput>\n        </SimpleFormIterator>\n      </ArrayInput>\n    </SimpleForm>\n  </Edit>\n);\n","// in src/User.js\nimport * as React from \"react\";\n// tslint:disable-next-line:no-var-requires\nimport {\n  Datagrid,\n  List,\n  Show,\n  Create,\n  Edit,\n  Filter,\n  SimpleShowLayout,\n  SimpleForm,\n  TextField,\n  TextInput,\n  ShowButton,\n  EditButton,\n  DeleteButton,\n} from \"react-admin\";\n\nconst UserFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"title\" alwaysOn />\n  </Filter>\n);\n\nexport const UserList = (props) => (\n  <List {...props} filters={<UserFilter />}>\n    <Datagrid>\n      <TextField source=\"name\" />\n      <TextField source=\"age\" />\n      <TextField source=\"createdate\" />\n      <TextField source=\"lastupdate\" />\n      <ShowButton label=\"\" />\n      <EditButton label=\"\" />\n      <DeleteButton label=\"\" redirect={false}/>\n    </Datagrid>\n  </List>\n);\n\nexport const UserShow = (props) => (\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"id\" />\n      <TextField source=\"name\" />\n      <TextField source=\"age\" />\n    </SimpleShowLayout>\n  </Show>\n);\n\nexport const UserCreate = (props) => (\n  <Create {...props} >\n    <SimpleForm>\n      <TextInput source=\"id\" />\n      <TextInput source=\"name\" />\n      <TextInput source=\"age\" />\n    </SimpleForm>\n  </Create>\n);\n\nexport const UserEdit = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <TextInput disabled source=\"createdate\" />\n      <TextInput disabled source=\"lastupdate\" />\n      <TextInput source=\"name\" />\n      <TextInput source=\"age\" />\n    </SimpleForm>\n  </Edit>\n);\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Snackbar,\n  TextField,\n} from \"@material-ui/core\";\n\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\n\nexport default function AlertDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n\n  const [toastOpen, setToastOpen] = React.useState(false);\n  const [toastMessage, setToastMessage] = React.useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSubmit = async () => {\n    console.log(\"sending email to: \", email);\n    try {\n      await firebase.auth().sendPasswordResetEmail(email);\n      setOpen(false);\n      setToastOpen(true);\n      setToastMessage(\"Password reset email sent!\");\n    } catch (error) {\n      setToastOpen(true);\n      setToastMessage(error.message);\n    }\n  };\n\n  const handleOnChange = (event) => {\n    const email = event.target.value;\n    setEmail(email);\n  };\n\n  const handleToastClose = () => {\n    setToastOpen(false);\n    setToastOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        Forgot Password?\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Send Password Reset?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            A password reset will be sent to the following email:\n          </DialogContentText>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Email\"\n            type=\"email\"\n            variant=\"outlined\"\n            style={{width: '100%'}}\n            onChange={handleOnChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSubmit} color=\"primary\" autoFocus>\n            Send Email\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={toastOpen}\n        onClose={handleToastClose}\n        autoHideDuration={6000}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        message={toastMessage}\n      ></Snackbar>\n    </div>\n  );\n}\n","// LoginPage.js\nimport React from \"react\";\nimport { Login, LoginForm } from \"react-admin\";\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from \"firebase/compat/app\";\nimport ForgotPasswordButton from './CustomForgotPassword'\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '#/',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID\n  ]\n};\n\nconst SignInScreen = () => <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>;\n\nconst CustomLoginForm = props => (\n  <div>\n    <div style={{fontFamily: \"monospace\", marginLeft: '15px'}}>\n      <p>Username: test@example.com</p>\n      <p>Password: password</p>\n    </div>\n    <LoginForm {...props} />\n    <ForgotPasswordButton {...props} />\n    <SignInScreen />\n  </div>\n);\n\nconst CustomLoginPage = props => (\n  <Login {...props}>\n    <CustomLoginForm {...props}/>\n  </Login>\n);\n\nexport default CustomLoginPage;\n","import * as React from 'react';\nimport { PostList, PostShow, PostCreate, PostEdit } from './posts';\nimport { UserList, UserShow, UserCreate, UserEdit } from './users';\nimport { Admin, Resource } from 'react-admin';\nimport {\n  FirebaseDataProvider,\n  FirebaseAuthProvider,\n} from 'react-admin-firebase';\n\nimport firebase from \"firebase/compat/app\";\n\nimport UserIcon from '@material-ui/icons/People';\n\nimport CustomLoginPage from './CustomLoginPage';\n\nconst firebaseConfig = JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG);\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconsole.log({firebaseConfig, firebaseApp});\n\nconst authProvider = FirebaseAuthProvider(firebaseConfig);\nconst dataProvider = FirebaseDataProvider(firebaseConfig, {\n  logging: true,\n  // rootRef: 'rootrefcollection/QQG2McwjR2Bohi9OwQzP',\n  app: firebaseApp,\n  // watch: ['posts'];\n  // dontwatch: ['comments'];\n  persistence: 'local',\n  // disableMeta: true\n  dontAddIdFieldToDoc: true,\n  lazyLoading: {\n    enabled: true,\n  },\n  firestoreCostsLogger: {\n    enabled: true,\n  },\n});\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Admin\n        loginPage={CustomLoginPage}\n        dataProvider={dataProvider}\n        authProvider={authProvider}\n      >\n        <Resource\n          name=\"posts\"\n          list={PostList}\n          show={PostShow}\n          create={PostCreate}\n          edit={PostEdit}\n        />\n        <Resource\n          name=\"users\"\n          icon={UserIcon}\n          list={UserList}\n          show={UserShow}\n          create={UserCreate}\n          edit={UserEdit}\n        />\n      </Admin>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}